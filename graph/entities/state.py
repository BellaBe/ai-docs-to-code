from typing import TypedDict

from typing import TypedDict

class GraphState(TypedDict):
    """
    Represents the state of our graph.

    Attributes:
        question: User question
        improved_question: Improved user question by the system
        field_of_expertise: Field of assistant expertise required to answer the question
        context: Documentation extracted from knowledge base
        generation: Code solution to answer user question
        iterations: Number of attempts to generate the solution
        is_answer_useful: Assessment whether the answer generated by an LLM is useful (yes/no)
        answer_reasoning: The reasoning behind the usefulness assessment
        reflection: Detailed analysis of why the initial answer was not useful and specific aspects that need improvement
        error_messages: Error messages generated during code evaluation
        llm_name: Name of the model to be used to answer the question
        api_key: API key for the model
    """
    
    question: str
    improved_question: str
    field_of_expertise: str
    context: str
    generation: str
    iterations: int
    is_answer_useful: bool
    answer_reasoning: str
    reflection: str
    error_messages: str
    llm_name: str
    api_key: str

    
